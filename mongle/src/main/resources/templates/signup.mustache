<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>회원가입 - 몽글몽글</title>
    <link href="https://fonts.googleapis.com/css2?family=SUIT:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
          font-family: 'SUIT', sans-serif;
          background-color: #fef6f0;
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
          height: 100vh;
          margin: 0;
        }
        .logo {
          margin-bottom: 1rem;
        }
        .logo img {
          height: 250px;
        }
        .form-box {
          background: white;
          padding: 2rem 3rem;
          border-radius: 1rem;
          box-shadow: 0 5px 15px rgba(0,0,0,0.1);
          width: 320px;
          text-align: center;
        }
        h2 {
          margin-bottom: 1.2rem;
          color: #444;
        }
        input {
          width: 100%;
          padding: 0.8rem;
          margin: 0.3rem 0;
          border: 1px solid #ccc;
          border-radius: 0.5rem;
        }
        .btn {
          width: 100%;
          background: #ffc1a1;
          color: white;
          font-weight: bold;
          padding: 0.8rem;
          border: none;
          border-radius: 0.5rem;
          cursor: pointer;
          margin-top: 1rem;
        }
        .btn:hover {
          background: #ffa577;
        }
        .oauth-btn {
          background-color: #fee500;
          color: #3c1e1e;
          font-weight: bold;
        }
        .switch-link {
          margin-top: 1rem;
          font-size: 0.9rem;
        }
        .check-btn {
          margin-top: 0.5rem;
          background-color: #e0e0e0;
          color: #333;
          font-size: 0.8rem;
          padding: 0.5rem;
        }
        .message {
          font-size: 0.8rem;
          color: #d66;
          margin-bottom: 0.5rem;
          height: 1rem;
        }
        .message.valid {
          color: #2e7d32;
        }
    </style>
</head>
<body>
<div class="logo">
    <img src="/images/image.png" alt="몽글몽글">
</div>

<div class="form-box">
    <h2>회원가입 🌸</h2>
    <form id="signupForm" action="/api/auth/signup" method="post">
        <input type="text" name="email" id="email" placeholder="이메일">
        <button class="btn check-btn" type="button" onclick="checkEmail()">이메일 중복 확인</button>
        <p class="message" id="emailMsg"></p>

        <input type="text" name="nickname" id="nickname" placeholder="닉네임">
        <button class="btn check-btn" type="button" onclick="checkNickname()">닉네임 중복 확인</button>
        <p class="message" id="nicknameMsg"></p>

        <input type="password" name="password" id="password" placeholder="비밀번호">
        <input type="password" name="confirmPassword" id="confirmPassword" placeholder="비밀번호 확인">
        <p class="message" id="passwordMsg"></p>

        <button class="btn" type="submit">가입하기</button>
        <button class="btn oauth-btn" type="button">카카오로 가입하기</button>
    </form>

    <div class="switch-link">
        이미 계정이 있으신가요? <a href="/login-page">로그인</a>
    </div>
</div>

<script>
    let isEmailValid = false;
    let isNicknameValid = false;

    function checkEmail() {
      const email = document.getElementById('email').value;
      const msgEl = document.getElementById('emailMsg');
      const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

      if (!regex.test(email)) {
        msgEl.innerText = '이메일 형식이 올바르지 않습니다.';
        msgEl.classList.remove('valid');
        isEmailValid = false;
        return;
      }

      fetch(`/api/auth/check-email?email=${encodeURIComponent(email)}`)
        .then(res => {
          if (!res.ok) throw new Error("서버 에러");
          return res.json();
        })
        .then(isAvailable => {
          if (isAvailable) {
            msgEl.innerText = '사용 가능한 이메일입니다.';
            msgEl.classList.add('valid');
            isEmailValid = true;
          } else {
            msgEl.innerText = '이미 사용 중인 이메일입니다.';
            msgEl.classList.remove('valid');
            isEmailValid = false;
          }
        })
        .catch(err => {
          msgEl.innerText = '오류가 발생했습니다.';
          msgEl.classList.remove('valid');
          isEmailValid = false;
          console.error(err);
        });
    }

    function checkNickname() {
      const nickname = document.getElementById('nickname').value;
      const msg = document.getElementById('nicknameMsg');

      fetch(`/api/auth/check-nickname?nickname=${encodeURIComponent(nickname)}`)
        .then(res => res.json())
        .then(isAvailable => {
          if (isAvailable) {
            msg.innerText = '사용 가능한 닉네임입니다.';
            msg.classList.add('valid');
            isNicknameValid = true;
          } else {
            msg.innerText = '이미 사용 중인 닉네임입니다.';
            msg.classList.remove('valid');
            isNicknameValid = false;
          }
        });
    }

    document.getElementById('confirmPassword').addEventListener('input', function () {
      const pw = document.getElementById('password').value;
      const confirm = this.value;
      const msg = document.getElementById('passwordMsg');
      if (pw === confirm) {
        msg.innerText = '비밀번호가 일치합니다.';
        msg.classList.add('valid');
      } else {
        msg.innerText = '비밀번호가 다릅니다.';
        msg.classList.remove('valid');
      }
    });

    document.getElementById('signupForm').addEventListener('submit', function (e) {
      if (!isEmailValid || !isNicknameValid) {
        e.preventDefault();
        alert('이메일 또는 닉네임 중복 확인을 완료해주세요.');
      }
    });

    document.getElementById('email').addEventListener('input', () => isEmailValid = false);
    document.getElementById('nickname').addEventListener('input', () => isNicknameValid = false);
</script>
</body>
</html>
